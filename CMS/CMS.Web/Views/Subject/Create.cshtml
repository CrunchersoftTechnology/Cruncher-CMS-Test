@model CMS.Web.ViewModels.SubjectViewModel

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Create";
}
<h2>Create Subject</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.ClassName)
    @Html.HiddenFor(x => x.SelectedClasses)
    @Html.HiddenFor(m => m.CurrentUserRole)
    @Html.HiddenFor(m => m.ClientName)

    <div class="form-horizontal">
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @if (Model.CurrentUserRole == "Admin")
        {
            <div class="form-group">
                @Html.LabelFor(m => m.Clients, htmlAttributes: new { @class = "control-label col-md-2 asterisk_input", @id = "lblClientId" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ClientId, new SelectList(Model.Clients, "Value", "Text"),
                    "Select Branch", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else if (Model.CurrentUserRole == "Client")
        {
            <div class="form-group">
                @Html.LabelFor(m => m.ClientName, htmlAttributes: new { @class = "control-label col-md-2 asterisk_input", @id = "lblClientName" })
                <div class="col-md-10">
                    @Html.EditorFor(m => m.ClientName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
                    @Html.HiddenFor(m => m.ClientId)
                </div>
            </div>
        }

       
            <div class="form-group">
                @Html.LabelFor(m => m.Classes, htmlAttributes: new { @class = "control-label col-md-2 asterisk_input", @id = "lblClassId" })
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.ClassId, Model.Classes, "Select Class", new { @class = "form-control", @onchange = "FillClasses(this.value)" })
                    @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2 asterisk_input", @id = "lblName" })
            <span class="control-label glyphicon glyphicon-info-sign" title="Subject name, will be required while creating batch, student &
              master Fee." id="tooltipName"></span>
            <div class="col-md-3">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Subjects List", "Index")
</div>

@section Scripts {

    <script>
        $(document).ready(function () {
            $("#tooltipName").tooltip({ track: true });
            $('#ClassId').on('change', function () {
                RequiredValidation('#ClassId', '#lblClassId')
            });
            $("#tooltipClsName").tooltip({ track: true });
            $('#Name').on('change', function () {
                RequiredValidation('#Name', '#lblName')
            });
            $('#ClassId').on('change', function () {
                $("#ClassName").val($('#ClassId :selected').text());
                RequiredValidation('#ClassId', '#lblClassId')
            });
            $('#ClassId').multiselect({
                includeSelectAllOption: true
            });
        });


        function FillClasses(classId)
        {
            var selected = $("#ClassId").find("option:selected");
            var arrSelected = [];
            selected.each(function () {
                arrSelected.push($(this).val());
            });
            var selectedClass = arrSelected.toString();
            $("#SelectedClasses").val(selectedClass);
        }

        function FillSubjects(classId) {
            if ($('#ClassId :selected').text() != "Select Class") {
                $("#ClassName").val($('#ClassId :selected').text());
                $.ajax({
                    url: '/Subject/GetSubjects',
                    type: "GET",
                    dataType: "JSON",
                    data: { classId: classId },
                    success: function (subjects) {
                        $("#SubjectId").html(""); // clear before appending new list
                        $("#SubjectId").append($('<option></option>').val("").html("Select Subject"));
                        $.each(subjects, function (i, sub) {
                            $("#SubjectId").append(
                                $('<option></option>').val(sub.SubjectId).html(sub.Name));
                        });
                        $("#SubjectId").val(@ViewBag.SubjectId);
                    }
                });
            }
            else {
                $("#SubjectId").html("");
            }
        }
    </script>
    @Scripts.Render("~/bundles/StudentJS")
    @Styles.Render("~/Content/StudentCSS")
}
