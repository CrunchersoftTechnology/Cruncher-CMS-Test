@model CMS.Web.ViewModels.InstallmentViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<style>
    #InstallmentNo, #StudBatch {
        cursor: not-allowed;
    }
</style>
<h2>Edit Payment</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.InstallmentId)
    @Html.HiddenFor(m => m.UserId)
    @Html.HiddenFor(m => m.Email)
    @Html.HiddenFor(m => m.StudentContact)
    @Html.HiddenFor(m => m.ParentContact)
    @Html.HiddenFor(m => m.ParentAppPlayerId)
    @Html.HiddenFor(m => m.RemainingFeeFinal)

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ClassName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClassName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.ClassName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BranchName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BranchName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.BranchName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label col-md-2", @id = "lblStudentName" })
            <div class="col-md-2">
                @Html.EditorFor(m => m.StudentName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.HiddenFor(model => model.UserId)
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.StudBatch, new { style = "cursor: not - allowed;", htmlAttributes = new { @class = "form-control full-width-input", @autocomplete = "off", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinalFee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinalFee, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.FinalFee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RemainingFee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RemainingFee, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.RemainingFee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Payment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Payment, new { htmlAttributes = new { @class = "form-control", @onchange = "installationFinalFee()" } })
                @Html.ValidationMessageFor(model => model.Payment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReceiptBookNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReceiptBookNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReceiptBookNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReceiptNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReceiptNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReceiptNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InstallmentNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InstallmentNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.InstallmentNo, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.StudBatch, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StudBatch, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StudBatch, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.SMS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox checkbox-inline">
                    @Html.EditorFor(model => model.SMS)
                    @Html.ValidationMessageFor(model => model.SMS, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppNotification, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox checkbox-inline">
                    @Html.EditorFor(model => model.AppNotification)
                    @Html.ValidationMessageFor(model => model.AppNotification, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Payment List", "Index")
</div>

@section Scripts
{
    <script>
        $(document).ready(function () {
        });
        function installationFinalFee() {
            var totalfee = parseInt($("#TotalFee").val());
            $("#RemainingFee").val($("#RemainingFeeFinal").val())

            var rmCnt = parseInt($("#RemainingFee").val());
            var payment = parseInt($("#Payment").val());
            if (payment > rmCnt) {
                $('#msg').html("");
                $('#msg').append('<div>' + "Payment amount is exceded!" + '</div>');
                $('#msg').removeClass("hidden");
                $("#Payment").val("");
                $("#Payment").focus();
            }
            else {
                var result = rmCnt - payment;
                $("#RemainingFee").val(result);
            }
        }

    </script>
}
