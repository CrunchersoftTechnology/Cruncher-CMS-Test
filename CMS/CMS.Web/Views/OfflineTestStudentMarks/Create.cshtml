@model CMS.Web.ViewModels.OfflineTestStudentMarksViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Create Offline Test Marks</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.ClassId)
    @Html.HiddenFor(m => m.SelectedBatches)
    @Html.HiddenFor(m => m.SelectedBranches)
    @Html.HiddenFor(m => m.StudentEmail)
    @Html.HiddenFor(m => m.StudentContact)
    @Html.HiddenFor(m => m.Title)

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(m => m.Papers, htmlAttributes: new { @class = "control-label col-md-2 asterisk_input", @id = "lblPaperName" })
            <span class="control-label glyphicon glyphicon-plus-sign" title="Click on this button to add new
           Offline Test Paper." id="tooltipPaperName" onclick="@("window.location.href='" + @Url.Action("Create", "OfflineTestPaper") + "'");"></span>
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.OfflineTestPaperId, (SelectList)Model.Papers, "Select Paper", new { @class = "form-control", @onchange = "GetOfflineTest(this.value)" })
                @Html.ValidationMessageFor(model => model.OfflineTestPaperId, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.Label("(By default mail send to student)", new { @class = "text-default", @style = "font-weight:bold" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SMS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox checkbox-inline">
                    @Html.EditorFor(model => model.SMS)
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppNotification, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox checkbox-inline">
                    @Html.EditorFor(model => model.AppNotification)
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {

    <script>
        $(document).ready(function () {
            $("#tooltipPaperName").tooltip({ track: true });

            $('#OfflineTestPaperId').on('change', function () {
                $("#StudentName").val("");
                $("#StudBatch").val("");
                $("#Title").val($('#OfflineTestPaperId :selected').text());
                RequiredValidation('#OfflineTestPaperId', '#lblPaperName')
            });
        });

        function GetOfflineTest(offlineTestPaperId) {
            if ($("#OfflineTestPaperId").val() == "") {
                $("#StudentName").attr("readonly", "readonly");
            }
            else {
                $("#StudentName").removeAttr("readonly");
            }
            $.ajax({
                url: '/OfflineTestStudentMarks/GetOfflineTestById',
                type: "GET",
                dataType: "JSON",
                data: { OfflineTestPaperId: $("#OfflineTestPaperId").val() },
                async: false,
                success: function (data) {
                    $("#ClassName").val(data.className);
                    $("#SubjectName").val(data.subjectName);
                    $("#BatchName").val(data.batchName);
                    $("#BranchName").val(data.branchName);
                    $("#ClassId").val(data.classId);
                    $("#SelectedBatches").val(data.batchId);
                    $("#SelectedBranches").val(data.branchId);
                    $("#TotalMarks").val(data.totalMarks);
                }
            });
        };

    </script>
}
