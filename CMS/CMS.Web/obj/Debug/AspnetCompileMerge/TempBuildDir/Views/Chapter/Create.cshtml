@model CMS.Web.ViewModels.ChapterViewModel

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Create";
}

<h2>Create Chapter</h2>

@using (Html.BeginForm())
{
    @Html.HiddenFor(x => x.ClassName)
    @Html.HiddenFor(x => x.SubjectName)
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(m => m.Classes, htmlAttributes: new { @class = "control-label col-md-2 asterisk_input", @id = "lblClassId" })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.ClassId, (SelectList)Model.Classes, "Select Class", new { @class = "form-control", @onchange = "FillSubjects(this.value)" })
                @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Subjects, htmlAttributes: new { @class = "control-label col-md-2 asterisk_input", @id = "lblSubjectId" })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.SubjectId, new SelectList(Enumerable.Empty<SelectListItem>()), "Select Subject", new { @class = "form-control", @onchange = "getTotalWeightage()" })
                @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2 asterisk_input", @id = "lblName" })
            <span class="control-label glyphicon glyphicon-info-sign" title="Chapter name, will be required while creating quetion paper.
             " id="tooltipName"></span>
            <div class="col-md-3">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weightage, htmlAttributes: new { @class = "control-label col-md-2 asterisk_input", @id = "lblWeightage" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Weightage, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Weightage, "", new { @class = "text-danger" })
            </div>
            <div>
                @Html.Label("Total Weightage(%):")<span id="countWeightage"></span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" onclick="Confirm()" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Chapters List", "Index")
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            $("#tooltipName").tooltip({ track: true });
            $('#ClassId').on('change', function () {
                RequiredValidation('#ClassId', '#lblClassId')
            });
            $('#SubjectId').on('change', function () {
                RequiredValidation('#SubjectId', '#lblSubjectId')
            });
            $('#Name').on('change', function () {
                RequiredValidation('#Name', '#lblName')
            });
            $('#Weightage').on('change', function () {
                RequiredValidation('#Weightage', '#lblWeightage')
            });

            var wc = '@ViewBag.Weightage'
            $("#countWeightage").text(wc);
            if (parseInt(@ViewBag.ClassId) > 0) {
                $("#ClassId").val(@ViewBag.ClassId);
                FillSubjects(@ViewBag.ClassId);
            }

            if (parseInt(@ViewBag.SubjectId) > 0) {
                FillSubjects(@ViewBag.ClassId);
            }

        });

        function FillSubjects(classId) {
            if ($('#ClassId :selected').text() != "Select Class") {
                $("#ClassName").val($('#ClassId :selected').text());
                $.ajax({
                    url: '/Subject/GetSubjects',
                    type: "GET",
                    dataType: "JSON",
                    data: { classId: classId },
                    success: function (subjects) {
                        $("#SubjectId").html(""); // clear before appending new list
                        $("#SubjectId").append($('<option></option>').val("").html("Select Subject"));
                        $.each(subjects, function (i, sub) {
                            $("#SubjectId").append(
                                $('<option></option>').val(sub.SubjectId).html(sub.Name));
                        });
                        $("#SubjectId").val(@ViewBag.SubjectId);
                    }
                });
            }
            else {
                $("#SubjectId").html("");
            }
        }

        function getTotalWeightage() {
            var classId = $("#ClassId").val();
            var subjectId = $("#SubjectId").val();
            $("#SubjectName").val($('#SubjectId :selected').text());
            $.ajax({
                url: '/Chapter/GetWeightageCount',
                type: "GET",
                dataType: "JSON",
                data: { classId: classId, subjectId: subjectId },
                success: function (data) {
                    $("#countWeightage").text(data);
                }
            });
        }
    </script>
}
