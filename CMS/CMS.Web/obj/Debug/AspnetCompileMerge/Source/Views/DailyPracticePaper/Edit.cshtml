@model CMS.Web.ViewModels.DailyPracticePaperEditViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Edit Daily Practice Problem</h2>
@using (Html.BeginForm("Edit", "DailyPracticePaper", FormMethod.Post, new
{
    enctype = "multipart/form-data"
}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.DailyPracticePaperId)
    @Html.HiddenFor(m => m.FileName)

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SelectedBranches, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SelectedBranches, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SelectedClasses, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SelectedClasses, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SelectedBatches, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SelectedBatches, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DailyPracticePaperDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.DailyPracticePaperDate, new { htmlAttributes = new { @class = "form-control datepicker", autocomplete = "off", @type = "text", @maxlength = "10", @placeholder = "DD-MM-YYYY" } })
                @Html.ValidationMessageFor(model => model.DailyPracticePaperDate, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (ViewBag.fileName != "" && ViewBag.fileName != null)
                {
            <div class="form-group">
                @Html.LabelFor(model => model.FilePath, htmlAttributes: new { @class = "control-label col-md-2", @id = "lblFilePath" })
                <div class="col-md-10">
                    <a href='@Url.Action("DownloadPDF", "DailyPracticePaper", new { id = Model.DailyPracticePaperId })' target="_blank"><span class='glyphicon glyphicon-download-alt'></span></a>
                </div>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.FilePath, htmlAttributes: new { @class = "control-label col-md-2", @id = "lblFilePath" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.FilePath, new { @type = "file", @class = "file input-group-margin", @accept = "image/jpeg,image/gif,image/png,application/pdf,image/x-eps" })
                @Html.ValidationMessageFor(model => model.FilePath, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AttachmentDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AttachmentDescription, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.AttachmentDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Daily Practice Problems List", "Index")
</div>
@section Scripts {
    <script>
        $(document).ready(function () {
            $('#FilePath').on('change', function () {
                if ($("#FilePath").val() != "") {
                    $("#AttachmentDescription").removeAttr("readonly");
                }
                if ($("#FilePath").val() == "") {
                    $("#AttachmentDescription").attr("readonly", "readonly");
                }
            });
        });
    </script>
}
