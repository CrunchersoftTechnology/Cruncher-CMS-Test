@model CMS.Web.ViewModels.UploadOfflineMarksViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Edit Upload Marks</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.OfflineTestPaperId)
    @Html.HiddenFor(m => m.OfflineTestStudentMarksId)
    <div class="form-horizontal">
        <hr />
        <div id="message">
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TotalMarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalMarks, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentOfflineMarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <table id="studentList" class="table"></table>
                @Html.HiddenFor(m => m.StudentOfflineMarks)
                @Html.ValidationMessageFor(model => model.StudentOfflineMarks, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.Label("( Bydefault email send to student )", new { @class = "text-default", @style = "font-weight:bold" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SMS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.SMS)
                    @Html.ValidationMessageFor(model => model.SMS, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppNotification, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.AppNotification)
                    @Html.ValidationMessageFor(model => model.AppNotification, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Update" id="Update" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Upload Marks List", "Index")
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            $("#OfflineTestPaperId").val('@ViewBag.offlineTestPaperId')

            GetStudent('@ViewBag.offlineTestPaperId');

            $("#Update").on('click', function () {
                JSONObjMarks = [];
                var studentPaperMarks = $("#studentList").find("td #PaperMarks");
                var studentPercentage = $("#studentList").find("td #PaperPercentage");
                var studentEmail = $("#studentList").find("td #studEmail");
                var studentContact = $("#studentList").find("td #studContact");
                var offlineTestMarksId = $("#studentList").find("td #offlineTestMarksId");
                var IsPresent = $("#studentList").find("td #Absent");

                var data = JSON.parse(JSON.stringify(JSONObjMarks));

                var paperMarks = [];
                var sId = [];
                var percentage = [];
                var email = [];
                var contact = [];
                var MarksId = [];
                var present = [];

                studentPaperMarks.each(function () {
                    paperMarks.push($(this).val());
                    sId.push($(this).attr("datavalue"));
                });

                studentPercentage.each(function () {
                    percentage.push($(this).val());
                });

                studentEmail.each(function () {
                    email.push($(this).val());
                    sId.push($(this).attr("datavalue"));
                });

                studentContact.each(function () {
                    contact.push($(this).val());
                    sId.push($(this).attr("datavalue"));
                });

                offlineTestMarksId.each(function () {
                    MarksId.push($(this).val());
                    sId.push($(this).attr("datavalue"));
                });

                IsPresent.each(function () {
                    if ($(this).is(':checked')) {
                        present.push(0);
                    }
                    else {
                        present.push(1);
                    }
                    sId.push($(this).attr("datavalue"));
                });

                for (var i = 0; i < percentage.length; i++) {
                    if (paperMarks[i] == "" || paperMarks[i] == "Invalid Marks") {
                        var divMessage = '<div id="alertMessage" class="alert hidden"><a href="#" class="close" data-dismiss="alert" aria-label="close">×</a><div id="msg"></div></div>';
                        $("#message").html("");
                        $("#message").append(divMessage);
                        $('#msg').html('<div>Please fill all student marks </div>');
                        $("#alertMessage").removeClass("hidden").removeClass("alert-success").addClass("alert-danger");
                        $('html, body').animate({ scrollTop: "0px" }, 'fast');
                        return false;
                    }
                    else {
                        $('#message').html("");
                        $("#alertMessage").removeClass("hidden").removeClass("alert-danger").addClass("alert-success");
                        var item = {};
                        item["UserId"] = sId[i];
                        item["ObtainedMarks"] = paperMarks[i];
                        item["Percentage"] = percentage[i];
                        item["EmailId"] = email[i];
                        item["StudentContact"] = contact[i];
                        item["OfflineTestStudentMarksId"] = MarksId[i];
                        item["IsPresent"] = present[i];
                        JSONObjMarks.push(item);
                    }
                }
                var data = (JSON.stringify(JSONObjMarks));
                $("#StudentOfflineMarks").val(data);

                var jqxhr = $.post("/UploadOfflineMarks/UpdateUploadMarks",
                 {
                     StudentOfflineMarks: $("#StudentOfflineMarks").val(),
                     OfflineTestPaperId: $("#OfflineTestPaperId").val(),
                     Title: $("#Title").val(),
                     TotalMarks: $("#TotalMarks").val(),
                     SMS: $("#SMS").is(":checked"),
                     AppNotification: $("#AppNotification").is(":checked"),
                 }, function (data) {
                     var divMessage = '<div id="alertMessage" class="alert hidden"><a href="#" class="close" data-dismiss="alert" aria-label="close">×</a><div id="msg"></div></div>';
                     $("#message").html("");
                     $("#message").append(divMessage);

                     if (data.Success == true) {
                         var m = "";
                         for (var i = 0; i < data.Results.length; i++) {
                             m = m + data.Results[i].Message + "</br>";
                         }
                         $('#msg').html('<div>' + m + '</div>');
                         $("#alertMessage").removeClass("hidden").removeClass("alert-danger").addClass("alert-success");
                         window.location.href = "/UploadOfflineMarks/Index"
                         $("#TotalMarks").val('');
                         $("#SMS, #AppNotification").prop("checked", false);
                         $("#studentList").html(""); // clear before appending new list
                         $("#StudentOfflineMarks").html("");
                     }
                     else {
                         var m = "";
                         for (var i = 0; i < data.Results.length; i++) {
                             //FillClasses
                             m = m + data.Results[i].Message + ".</br>";
                         }
                         $('#msg').html('<div>' + m + '</div>');
                         $("#alertMessage").removeClass("hidden").removeClass("alert-success").addClass("alert-danger");
                     }
                 }).done(function () {

                 }).fail(function () {
                     $('#msg').html('<div>Something went wrong! Please try again.</div>');
                     $("#alertMessage").removeClass("hidden").removeClass("alert-success").addClass("alert-danger");
                 }).always(function () {
                 });
            });
        });
        function GetStudent(offlineTestPaperId) {
            if ($('#OfflineTestPaperId :selected').text() != "Select Paper") {
                $.ajax({
                    url: '/UploadOfflineMarks/GetStudentMarksList',
                    type: "GET",
                    dataType: "JSON",
                    data: { id: offlineTestPaperId },
                    success: function (data) {
                        $("#studentList").html(""); // clear before appending new list
                        $("#StudentOfflineMarks").html("");
                        var divStudent = "";
                        divStudent += "<tr><td><div class='col-md-8'><b>Student Name</b></div></td><td><div class='col-md-4'><div aria-label='...'><label><b>Marks</b></label></td><td><label><b>Percentage</b></label></td><td><label><b>Absent</b></label></td></div></div></tr>";
                        $.each(data, function (i, student) {
                            $("#TotalMarks").val(student.TotalMarks);
                            $("#Title").val(student.Title);
                            if (student.IsPresent != 0) {
                                divStudent += "<tr><td><div class='col-md-8'>" + student.StudentName + "</div></td><td><div class='col-md-4'><div aria-label='...' id='studDiv'><input type='text' datavalue='" + student.UserId + "' name='PaperMarks' id='PaperMarks' class='StudMark' value='" + student.ObtainedMarks + "' autocomplete='off'/></td><td><input type='text' name='PaperPercentage' class='StudPercentage' datavalue='" + student.UserId + "' id='PaperPercentage' value='" + student.Percentage + "' disabled/></td> <td><input type='checkbox' name='Absent' id='Absent' class='StudAbsent' datavalue='" + student.UserId + "'><td/><td><input type='hidden' name='studEmail' id='studEmail' value='" + student.EmailId + "'></td><td><input type='hidden' name='studContact' id='studContact' value='" + student.StudentContact + "'></td><td><input type='hidden' name='studParentId' id='studParentId' value='" + student.parentAppPlayerId + "'></td><td><input type='hidden' name='offlineTestMarksId' id='offlineTestMarksId' value='" + student.OfflineTestStudentMarksId + "'></td></div></div></td></tr>";
                            }
                            else
                            {
                            divStudent += "<tr><td><div class='col-md-8'>" + student.StudentName + "</div></td><td><div class='col-md-4'><div aria-label='...' id='studDiv'><input type='text' datavalue='" + student.UserId + "' name='PaperMarks' id='PaperMarks' class='StudMark' value='" + student.ObtainedMarks + "' autocomplete='off'/></td><td><input type='text' name='PaperPercentage' class='StudPercentage' datavalue='" + student.UserId + "' id='PaperPercentage' value='" + student.Percentage + "' disabled/> <td><input type='checkbox' name='Absent' id='Absent' class='StudAbsent' datavalue='" + student.UserId + "' checked><td/><td><input type='hidden' name='studEmail' id='studEmail' value='" + student.EmailId + "'></td><td><input type='hidden' name='studContact' id='studContact' value='" + student.StudentContact + "'></td><td><input type='hidden' name='studParentId' id='studParentId' value='" + student.parentAppPlayerId + "'></td><td><input type='hidden' name='offlineTestMarksId' id='offlineTestMarksId' value='" + student.OfflineTestStudentMarksId + "'></td></div></div></td></tr>";
                            }
                            });
                        divStudent = "<tbody>" + divStudent + "</tbody>";
                        $("#studentList").append(divStudent);
                        $(".StudMark").unbind("change");
                        $(".StudMark").bind("change", CalculatePercentage);
                        $(".StudAbsent").unbind("change");
                        $(".StudAbsent").bind("change", GetAbsentStudent);
                    }
                });
            }
        }

        function GetAbsentStudent() {
            console.log("ok absent");
            var sid = $(this).attr("datavalue");
            var studentMarks = $("#studentList").find("td #PaperMarks");
            var absent = $("#studentList").find("td #Absent").is(':checked');
            studentMarks.each(function () {
                if ($(this).attr("datavalue") == sid) {
                    if (!absent) {
                        $(this).removeAttr("disabled", "disabled");
                        $(this).val('');
                    }
                    else {
                        $(this).val(0);
                        $(this).attr("disabled", "disabled");
                    }
                }
            });
            var studentPercentage = $("#studentList").find("td #PaperPercentage");
            studentPercentage.each(function () {
                if ($(this).attr("datavalue") == sid) {
                    if (!absent) {
                        $(this).val('');
                    }
                    else {
                        $(this).val(0);
                    }
                }
            });
        }

        function CalculatePercentage() {
            var marks = parseInt($(this).val());
            var sid = $(this).attr("datavalue");
            var totalMarks = parseInt($("#TotalMarks").val());
            if (totalMarks >= marks) {
                $(this).css("background", "none");
                var percentage = ((marks * 100) / totalMarks);
                var studentPercentage = $("#studentList").find("td #PaperPercentage");
                studentPercentage.each(function () {
                    if ($(this).attr("datavalue") == sid) {
                        $(this).val(percentage.toFixed(2));
                    }
                });
            }
            else {
                $(this).css("background", "rgb(243, 222, 222)");
                $(this).val('');
                $(this).attr('placeholder', 'Invalid Marks');
                var studentPercentage = $("#studentList").find("td #PaperPercentage");
                studentPercentage.each(function () {
                    if ($(this).attr("datavalue") == sid) {
                        $(this).val('');
                    }
                });
            }
        }
    </script>
}