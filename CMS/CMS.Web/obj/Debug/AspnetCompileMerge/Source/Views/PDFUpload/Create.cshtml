@model CMS.Web.ViewModels.PDFUploadViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Student Upload</h2>

@using (Html.BeginForm("Create", "PDFUpload", FormMethod.Post, new
{
    enctype = "multipart/form-data"
}))
{
    @Html.HiddenFor(x=>x.ClassName)
    @Html.HiddenFor(x => x.PDFCategoryName)
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.Classes, htmlAttributes: new { @class = "control-label col-md-2 asterisk_input", @id = "lblClassId" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ClassId, (SelectList)Model.Classes, "Select Class", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.PDFCategories, htmlAttributes: new { @class = "control-label col-md-2 asterisk_input", @id = "lblPDFCategoryId" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PDFCategoryId, (SelectList)Model.PDFCategories, "Select PDFCategory", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PDFCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2 asterisk_input", @id = "lblTitle" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FilePath, htmlAttributes: new { @class = "control-label col-md-2 asterisk_input", @id = "lblFilePath" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.FilePath, new { @type = "file", @class = "file input-group-margin", @accept = "application/pdf", @maxFileSize = 123456789 })
                @Html.ValidationMessageFor(model => model.FilePath, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.IsVisible, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox checkbox-inline">
                    @Html.EditorFor(model => model.IsVisible)
                    @Html.ValidationMessageFor(model => model.IsVisible, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsSend, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox checkbox-inline">
                    @Html.EditorFor(model => model.IsSend)
                    @Html.ValidationMessageFor(model => model.IsSend, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to PDF List", "Index")
</div>
@section Scripts {
    <script>
        $(document).ready(function () {
            $('#ClassId').on('change', function () {
                $("#ClassName").val($('#ClassId :selected').text());
                RequiredValidation('#ClassId', '#lblClassId')
            });
            $('#FilePath').on('change', function () {
                RequiredValidation('#FilePath', '#lblFilePath')
            });
            $('#Title').on('change', function () {
                RequiredValidation('#Title', '#lblTitle')
            });
            $('#PDFCategoryId').on('change', function () {
                $("#PDFCategoryName").val($('#PDFCategoryId :selected').text());
                RequiredValidation('#PDFCategoryId', '#lblPDFCategoryId')
            });
        });
    </script>
}
